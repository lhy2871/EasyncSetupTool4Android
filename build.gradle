buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
        google()
        // google()
        // jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.3'
    }
}

apply plugin: 'com.android.application'

repositories {
    mavenCentral()
    maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
    maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
    maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
    google()
    // google()
    // jcenter()
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.nanohttpd:nanohttpd:2.1.1'
    implementation 'de.greenrobot:eventbus:2.4.0'
    implementation 'com.google.android.gms:play-services-auth:18.0.0'
}

android {
    signingConfigs {
        HanyuanLiu {
            //storeFile file('C:/Users/lhy28/Documents/repo/Android/Sign/HanyuanLiu.jks')
        }
    }
    lintOptions {
        abortOnError false
    }
    compileSdkVersion 29
    buildToolsVersion '28.0.3'
    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 29
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'LICENSE.txt'
    }
    productFlavors {
    }
}

task adbConfig(type: Exec) {
    commandLine 'adb', 'connect', '192.168.1.45:5555'
}

task tst(dependsOn: ['adbConfig', 'connectedAndroidTest']) {

}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}
